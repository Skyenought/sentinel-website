{
  "filename": "logs.md",
  "__html": "<h1>日志</h1>\n<p>Sentinel 日志目录可通过 <code>csp.sentinel.log.dir</code> 启动参数进行配置，详情请参考<a href=\"./general-configuration.md\">通用配置项文档</a>。</p>\n<h2>拦截详情日志（block 日志）</h2>\n<p>无论触发了限流、熔断降级还是系统保护，它们的秒级拦截详情日志都在 <code>${user_home}/logs/csp/sentinel-block.log</code>里。如果没有发生拦截，则该日志不会出现。日志格式如下:</p>\n<pre><code>2014-06-20 16:35:10|1|sayHello(java.lang.String,long),FlowException,default,origin|61,0\n2014-06-20 16:35:11|1|sayHello(java.lang.String,long),FlowException,default,origin|1,0\n</code></pre>\n<p>日志含义：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">index</th>\n<th style=\"text-align:center\">例子</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:center\"><code>2014-06-20 16:35:10</code></td>\n<td style=\"text-align:left\">时间戳</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:center\"><code>1</code></td>\n<td style=\"text-align:left\">该秒发生的第一个资源</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:center\"><code>sayHello(java.lang.String,long)</code></td>\n<td style=\"text-align:left\">资源名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:center\"><code>XXXException</code></td>\n<td style=\"text-align:left\">拦截的原因, 通常 <code>FlowException</code> 代表是被限流规则拦截，<code>DegradeException</code> 则表示被降级，<code>SystemBlockException</code> 则表示被系统保护拦截</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:center\"><code>default</code></td>\n<td style=\"text-align:left\">生效规则的调用来源（参数限流中代表生效的参数）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:center\"><code>origin</code></td>\n<td style=\"text-align:left\">被拦截资源的调用者，可以为空</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:center\"><code>61,0</code></td>\n<td style=\"text-align:left\">61 被拦截的数量，０无意义可忽略</td>\n</tr>\n</tbody>\n</table>\n<h2>秒级监控日志</h2>\n<p>所有的资源访问都会产生秒级监控日志，日志文件默认为 <code>${user_home}/logs/csp/${app_name}-${pid}-metrics.log</code>（会随时间滚动）。格式如下:</p>\n<pre><code>1532415661000|2018-07-24 15:01:01|sayHello(java.lang.String)|12|3|4|2|295|0|0|1\n</code></pre>\n<ol>\n<li><code>1532415661000</code>：时间戳</li>\n<li><code>2018-07-24 15:01:01</code>：格式化之后的时间戳</li>\n<li><code>sayHello(java.lang.String)</code>：资源名</li>\n<li><code>12</code>：表示到来的数量，即此刻通过 Sentinel 规则 check 的数量（passed QPS）</li>\n<li><code>3</code>：实际该资源被拦截的数量（blocked QPS）</li>\n<li><code>4</code>：每秒结束的资源个数（完成调用），包括正常结束和异常结束的情况（exit QPS）</li>\n<li><code>2</code>：异常的数量</li>\n<li><code>295</code>：资源的平均响应时间（RT）</li>\n<li><code>0</code>: 该秒占用未来请求的数目（since 1.5.0）</li>\n<li><code>0</code>: 最大并发数（预留用）</li>\n<li><code>1</code>: 资源分类（since 1.7.0）</li>\n</ol>\n<h2>业务日志</h2>\n<p>其它的日志在 <code>${user_home}/logs/csp/sentinel-record.log.xxx</code> 里。该日志包含规则的推送、接收、处理等记录，排查问题的时候会非常有帮助。</p>\n<h2>集群限流日志</h2>\n<ul>\n<li><code>${log_dir}/sentinel-cluster-client.log</code>：Token Client 日志，会记录请求失败的信息</li>\n</ul>\n<h2>SPI 扩展机制</h2>\n<p>1.7.2 版本开始，Sentinel 支持 Logger 扩展机制，可以实现自定义的 Logger SPI 来将 record log 等日志自行处理。metric/block log 暂不支持定制。</p>\n"
}